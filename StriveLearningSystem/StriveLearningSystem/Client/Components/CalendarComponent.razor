@inject IJSRuntime JSRuntime
@implements IDisposable
@using System.Text.Json

<div id="calendar"></div>

@code {

    [Parameter] public List<CalendarEvent> CalendarEvents { get; set; } = null;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            //I'm only serializing like this to remove null values. The JSRuntime normally serializes just fine.
            var jsonEvents = JsonSerializer.Serialize(CalendarEvents, new JsonSerializerOptions() { IgnoreNullValues = true, PropertyNamingPolicy = JsonNamingPolicy.CamelCase});

            await JSRuntime.InvokeAsync<object>("createNewCalendar", "calendar", jsonEvents);
        }

    }

    void IDisposable.Dispose()
    {
        JSRuntime.InvokeAsync<object>("disposeCalendar", "calendar");
    }
}