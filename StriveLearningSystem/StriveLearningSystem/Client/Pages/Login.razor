@inject IdentityAgent _identityAgent
@inject NavigationManager _navigationManager

<div class="login-background">
    <div class="login-container">

        <div class="login-header">Strive Learning Systems</div>

        @if (pageState == "login")
        {
            <EditForm OnValidSubmit="LogIn" Model="loginCreds">
                <ValidationSummary />
                <DataAnnotationsValidator />
                <div class="login-content-container">
                    <div class="login-content">
                        <h1>Login</h1>
                        <h4>Email:</h4>
                        <input @bind-value="loginCreds.Email" type="email" placeholder="Enter Email" />
                        <h4>Password:</h4>
                        <input @bind="loginCreds.Password" type="password" placeholder="Enter Password" />
                    </div>
                    <div class="actionContainer">
                        <button type="button" class="active" @onclick="ChangeToRegister">Register</button>
                        <button type="submit">Login</button>
                    </div>
                </div>
            </EditForm>

        }
        else if (pageState == "register")
        {
            <EditForm OnValidSubmit="SignUp" Model="NewUser">
                <ValidationSummary />
                <DataAnnotationsValidator />
                <div class="login-content-container">
                    <div class="login-content">
                        <h1>Sign Up</h1>

                        <div>@NewUser.FirstName</div>

                        <h4>First Name:</h4>
                        <input @bind-value="NewUser.FirstName" @bind-value:event="oninput" type="text" placeholder="Enter First Name" />
                        &nbsp;
                        <h4>Last Name:</h4>
                        <input @bind-value="NewUser.LastName" type="text" placeholder="Enter Last Name" />
                        &nbsp;
                        <h4>Birthday:</h4>
                        <input @bind-value="NewUser.DateOfBirth" type="date" placeholder="Enter Birthday" />
                        &nbsp;
                        <h4>Email:</h4>
                        <input @bind-value="NewUser.Email" type="email" placeholder="Enter Email" />
                        &nbsp;
                        <h4>Password:</h4>
                        <input @bind-value="NewUser.Password" type="password" placeholder="Enter Password" />
                        &nbsp;

                        @if (userCreated)
                        {
                            <div>The user was created.</div>
                        }

                    </div>
                    <div class="actionContainer">
                        <button type="submit" >Register</button>
                        <button type="button" class="active" @onclick="ChangeToLogin">Login</button>
                    </div>
                </div>
            </EditForm>

        }

    </div>
</div>
@code {
    private string pageState = "login";
    private bool userCreated = false;

    private User NewUser { get; set; }

    private Credential loginCreds { get; set; } = new Credential();

    private string error = "";
    bool showErrors = false;

    private async Task LogIn()
    {
        var result = await _identityAgent.Login(loginCreds);

        if (result.Successful)
        {
            _navigationManager.NavigateTo("/");
        }
        else
        {
            error = result.Error;
            showErrors = true;
        }
    }

    private void ChangeToRegister()
    {
        NewUser = new User();
        pageState = "register";
        StateHasChanged();
    }

    private void ChangeToLogin()
    {
        pageState = "login";
        StateHasChanged();
    }

    private async void SignUp()
    {
        var user = await _identityAgent.RegisterUser(NewUser);
        if (user != null)
        {
            userCreated = true;
            StateHasChanged();
        }

    }
}