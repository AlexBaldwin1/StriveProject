@page "/teacher/submission/{GradeId:int}"
@inject AssignmentAgent _assignmentAgent
@inject GradeAgent _gradeAgent
@inject IToaster Toaster


@if (pageState == 0)
{
    <span>Loading...</span>
}
else
{
    <a href="/teacher/assignments/@grade.AssignmentID">Back to Assignment</a>
    <h1>Assignment Page</h1>
    <div class="card">
        <div class="card-header">
            <h2>@assignment.AssignmentTitle</h2>
        </div>
        <div class="card-body">
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><b>Course Id:</b> @assignment.CourseID</li>
                <li class="list-group-item"><b>Title:</b> @assignment.AssignmentTitle</li>
                <li class="list-group-item"><b>Assignment Type:</b> @assignment.AssignmentType</li>
                <li class="list-group-item"><b>Assignment Description:</b> @assignment.AssignmentDescription</li>
                <li class="list-group-item"><b>Assignment Due Date:</b> @assignment.DueDate</li>
                <li class="list-group-item"><b>Total Points:</b> @assignment.TotalPossible</li>
                <li class="list-group-item"><b>Submission is File:</b> @assignment.IsFile</li>
            </ul>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <h2>Submission</h2>
        </div>
        <div class="card-body">
            <div>@grade.GradeID</div>
            <div>@grade.UserID</div>
            <div>@grade.TextSubmission</div>
            <div>@grade.FileURl</div>
            <div>@grade.IsFile</div>
            <div>@grade.Score</div>
        </div>
    </div>
        }

        @code {

    [Parameter]
        public int GradeId { set; get; }
        public Assignment assignment;
        public Grade grade;
        int pageState = 0;


        protected override async Task OnInitializedAsync()
        {
            pageState = 0;
            await GetGrade();
            await GetAssignment();
            pageState = 1;
        }

        private async Task GetAssignment()
        {
            assignment = await _assignmentAgent.GetAssignment(grade.AssignmentID);
        }

        private async Task GetGrade()
        {
            grade = await _gradeAgent.GetGrade(GradeId);
        }
        }
